#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        PASS: PASS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp Y &kp N8 &kp N9 &kp N2 &kp N2 &kp N8 &kp N0>;
            label = "PASS";
        };

        ID: ID {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Z) &kp NUMBER_2 &kp NUMBER_6 &kp NUMBER_1 &kp NUMBER_7 &kp NUMBER_5 &kp NUMBER_7>;
            label = "ID";
        };

        terace: terace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_0 &kp NUMBER_0 &kp NUMBER_0>;
            label = "TERACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W               &kp E              &kp R           &kp T                                                                 &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A      &lt 1 S             &lt 2 D            &lt 3 F         &kp G        &trans                            &kp LEFT_PARENTHESIS   &kp H      &kp J  &lt 2 K    &kp L    &kp DELETE
&kp Z      &kp X               &kp C              &kp V           &kp B        &kp ESCAPE                        &kp RIGHT_PARENTHESIS  &kp N      &kp M  &kp COMMA  &kp DOT  &kp BACKSPACE
&kp LCTRL  &mt LG(D) LEFT_GUI  &mt CAPS LS(CAPS)  &kp LEFT_SHIFT  &lt 1 SPACE  &mt LA(LC(DELETE)) LS(LG(S))      &mt AT_SIGN MINUS      &kp ENTER                             &mt EXCLAMATION QUESTION
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUMBER {
            bindings = <
&kp F4     &trans        &trans     &trans          &trans                                     &kt ASTERISK  &kp N7  &kp N8  &kp N9  &kp PLUS
&kp F10    &kp LEFT_ALT  &kp ENTER  &kp UP_ARROW    &kp DEL        &trans           &kp EQUAL  &kp FSLH      &kp N4  &kp N5  &kp N6  &kp MINUS
&kp F11    &trans        &trans     &kp DOWN_ARROW  &kp BACKSPACE  &kp ESCAPE       &kp DOT    &kp N0        &kp N1  &kp N2  &kp N3  &kp BSPC
&kp LCTRL  &kp LEFT      &kp RIGHT  &kp LSHFT       &trans         &kp LA(RET)      &kp TAB    &kp RET                               &mt SEMI COLON
            >;
        };

        MOUSE {
            bindings = <
&trans     &trans    &trans     &trans          &trans                                  &kp F7        &kp F8          &kp F9          &kp F10          &kp F12
&trans     &kp HOME  &trans     &kp UP          &kp LC(C)  &trans             &trans    &trans        &mkp MB1        &mkp MB3        &mkp MB2         &kp DELETE
&trans     &kp END   &trans     &kp DOWN        &kp LC(V)  &kp ESC            &trans    &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_LEFT  &msc SCRL_RIGHT  &kp BACKSPACE
&kp LCTRL  &kp LEFT  &kp RIGHT  &kp LEFT_SHIFT  &kp SPACE  &kp LS(LG(S))      &mkp MB4  &kp ENTER                                                      &trans
            >;
        };

        OTHER {
            bindings = <
&trans  &trans  &trans  &trans   &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans   &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans   &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &terace  &PASS   &ID         &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
